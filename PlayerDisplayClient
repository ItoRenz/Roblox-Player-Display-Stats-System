-- ========================================
-- PlayerDisplayClient.lua (LocalScript)
-- Custom by ItoRenz00
-- Version 2.2 - Enhanced Custom Titles
-- ========================================
-- Place in: StarterPlayer > StarterPlayerScripts or StarterGui
-- ========================================

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

print("========================================")
print("PlayerDisplayClient LOADED - VERSION 2.2")
print("Custom by ItoRenz00")
print("========================================")

-- ========================================
-- CONFIGURATION
-- ========================================

-- Verified Users List
local VerifiedUsersList = {
	["ItoRenz00"] = true,
	["Player1"] = true,
	["Player2"] = true,
}

-- Roles System
local ROLES = {
	Owner = {
		["username1"] = true,
		["username2"] = true
	},
	Developer = { 
		["ItoRenz00"] = true,
		["DevPlayer1"] = true,
		["DevPlayer2"] = true
	},
	HeadAdmin = { 
		["AdminHead1"] = true,
		["AdminHead2"] = true
	},
	Admin = {
		["Admin1"] = true,
		["Admin2"] = true,
		["Admin3"] = true
	},
	Mod = {
		["Mod1"] = true,
		["Mod2"] = true,
		["Mod3"] = true
	},
	Cheater = {
		["Cheater1"] = true,
		["Cheater2"] = true
	},
	Helper = {
		["Helper1"] = true,
		["Helper2"] = true,
		["Helper3"] = true
	}
}

-- Role Emojis
local ROLE_EMOJI = {
	Owner = "üëë",
	Developer = "üíª",
	HeadAdmin = "üõ°Ô∏è",
	Admin = "üõ°Ô∏è",
	Mod = "üõ°Ô∏è",
	Cheater = "üëπ",
	Helper = "ü©∫",
}

-- Custom Titles (Multi-User Support)
local CUSTOM_TITLES = {
	["ItoRenz00"] = "CEO",
	["Player1"] = "VIP Member",
	["Player2"] = "Content Creator",
	["Player3"] = "Veteran",
	["Player4"] = "Beta Tester",
	["Player5"] = "Special Guest",
	["Player6"] = "Legendary Player",
	["Player7"] = "Pro Climber",
	["Player8"] = "Mountain Master",
	["Player9"] = "Elite Champion",
	["Player10"] = "Top Supporter",
	["username1"] = "Game Master",
	["username2"] = "Supreme Leader",
	["DevPlayer1"] = "Lead Developer",
	["DevPlayer2"] = "UI Designer",
	["Admin1"] = "Senior Admin",
	["Mod1"] = "Community Mod",
	["Helper1"] = "Support Team",
}

-- Custom Color Types (Multi-User Support)
local CUSTOM_COLOR_TYPES = {
	["username1"] = "pink_pulse",
	["username2"] = "rainbow",
	["username3"] = "purple_galaxy",
	["username4"] = "random_rgb_new_1",
	["username5"] = "random_rgb_new_2",
	["username6"] = "blue_rgb",
	["username7"] = "black_random_rgb",
	["username8"] = "red_rgb",
	["username9"] = "random_rgb_new_3",
	["username10"] = "random_rgb_1",
	["username11"] = "random_rgb_2",
	["username12"] = "random_rgb_new_4",
	["username13"] = "random_rgb_new_5",
	["ItoRenz00"] = "random_rgb_new_6",
	["Player1"] = "rainbow",
	["Player2"] = "purple_galaxy",
	["Player3"] = "blue_rgb",
	["Player4"] = "red_rgb",
	["Player5"] = "pink_pulse",
	["Player6"] = "random_rgb_new_1",
	["Player7"] = "random_rgb_new_2",
	["Player8"] = "random_rgb_new_3",
	["Player9"] = "random_rgb_new_4",
	["Player10"] = "random_rgb_new_5",
	
	-- Owner Rainbow (Special Effect for Owners Only)
	["OwnerUsername1"] = "owner_rainbow",
	["OwnerUsername2"] = "owner_rainbow",   
	["OwnerUsername3"] = "owner_rainbow",
}

-- Role Bracket Colors
local ROLE_BRACKET_COLORS = {
	Owner = Color3.fromRGB(255, 215, 0),
	Developer = Color3.fromRGB(0, 200, 255), 
	HeadAdmin = Color3.fromRGB(220, 20, 60),
	Admin = Color3.fromRGB(50, 205, 50),
	Mod = Color3.fromRGB(255, 140, 0),
	Cheater = Color3.fromRGB(128, 0, 0),
	Helper = Color3.fromRGB(100, 149, 237)
}

-- ========================================
-- UTILITY FUNCTIONS
-- ========================================

-- Get player role
local function getPlayerRole(username)
	for role, users in pairs(ROLES) do
		if users[username] then 
			return role 
		end
	end
	return nil
end

-- Get animated color based on color type
local function getAnimatedColor(colorType, time)
	local t = time or tick()

	if colorType == "pink_pulse" then
		local intensity = (math.sin(t * 3) + 1) / 2
		return Color3.fromRGB(255, math.floor(150 + intensity * 105), math.floor(180 + intensity * 75))
		
	elseif colorType == "rainbow" then
		local hue = (t * 0.5) % 1
		return Color3.fromHSV(hue, 1, 1)
		
	elseif colorType == "purple_galaxy" then
		local phase = t * 2.8
		local cycle = (phase % 4) / 4
		if cycle < 0.25 then
			local progress = cycle / 0.25
			return Color3.fromRGB(
				math.floor(75 + progress * 130),
				math.floor(0 + progress * 50),
				math.floor(130 + progress * 125)
			)
		elseif cycle < 0.5 then
			local progress = (cycle - 0.25) / 0.25
			return Color3.fromRGB(
				math.floor(205 + progress * 50),
				math.floor(50 + progress * 155),
				math.floor(255 - progress * 105)
			)
		elseif cycle < 0.75 then
			local progress = (cycle - 0.5) / 0.25
			return Color3.fromRGB(
				math.floor(255 - progress * 117),
				math.floor(205 - progress * 162),
				math.floor(150 + progress * 76)
			)
		else
			local progress = (cycle - 0.75) / 0.25
			return Color3.fromRGB(
				math.floor(138 - progress * 63),
				math.floor(43 - progress * 43),
				math.floor(226 - progress * 96)
			)
		end
		
	elseif colorType == "black_random_rgb" then
		local phase = t * 3.5
		local cycle = (phase % 4) / 4
		if cycle < 0.25 then
			local progress = cycle / 0.25
			return Color3.fromRGB(math.floor(0 + progress * 80), 0, 0)
		elseif cycle < 0.5 then
			local progress = (cycle - 0.25) / 0.25
			return Color3.fromRGB(math.floor(80 - progress * 80), math.floor(0 + progress * 80), 0)
		elseif cycle < 0.75 then
			local progress = (cycle - 0.5) / 0.25
			return Color3.fromRGB(0, math.floor(80 - progress * 80), math.floor(0 + progress * 80))
		else
			local progress = (cycle - 0.75) / 0.25
			return Color3.fromRGB(0, 0, math.floor(80 - progress * 80))
		end
		
	elseif colorType == "blue_rgb" then
		local phase = t * 3.5
		local cycle = (phase % 3) / 3
		if cycle < 0.33 then
			local progress = cycle / 0.33
			return Color3.fromRGB(0, math.floor(0 + progress * 255), 255)
		elseif cycle < 0.66 then
			local progress = (cycle - 0.33) / 0.33
			return Color3.fromRGB(math.floor(0 + progress * 128), math.floor(255 - progress * 255), 255)
		else
			local progress = (cycle - 0.66) / 0.34
			return Color3.fromRGB(math.floor(128 - progress * 128), 0, 255)
		end
		
	elseif colorType == "red_rgb" then
		local phase = t * 4.0
		local cycle = (phase % 3) / 3
		if cycle < 0.33 then
			local progress = cycle / 0.33
			return Color3.fromRGB(255, math.floor(0 + progress * 165), 0)
		elseif cycle < 0.66 then
			local progress = (cycle - 0.33) / 0.33
			return Color3.fromRGB(255, math.floor(165 + progress * 90), math.floor(0 + progress * 203))
		else
			local progress = (cycle - 0.66) / 0.34
			return Color3.fromRGB(255, math.floor(255 - progress * 255), math.floor(203 - progress * 203))
		end
		
	elseif colorType == "random_rgb_new_1" then
		local phase1, phase2, phase3 = t * 4.5, t * 3.8, t * 5.2
		return Color3.fromRGB(
			math.floor(120 + (math.sin(phase1) + 1) * 67.5),
			math.floor(120 + (math.sin(phase2) + 1) * 67.5),
			math.floor(120 + (math.sin(phase3) + 1) * 67.5)
		)
		
	elseif colorType == "random_rgb_new_2" then
		local phase1, phase2, phase3 = t * 3.2, t * 4.7, t * 3.9
		return Color3.fromRGB(
			math.floor(100 + (math.sin(phase1) + 1) * 77.5),
			math.floor(100 + (math.sin(phase2) + 1) * 77.5),
			math.floor(100 + (math.sin(phase3) + 1) * 77.5)
		)
		
	elseif colorType == "random_rgb_new_3" then
		local phase1, phase2, phase3 = t * 5.8, t * 4.1, t * 6.2
		return Color3.fromRGB(
			math.floor(90 + (math.sin(phase1) + 1) * 82.5),
			math.floor(90 + (math.sin(phase2) + 1) * 82.5),
			math.floor(90 + (math.sin(phase3) + 1) * 82.5)
		)
		
	elseif colorType == "random_rgb_new_4" then
		local phase1, phase2, phase3 = t * 4.3, t * 5.1, t * 3.6
		return Color3.fromRGB(
			math.floor(110 + (math.sin(phase1) + 1) * 72.5),
			math.floor(110 + (math.sin(phase2) + 1) * 72.5),
			math.floor(110 + (math.sin(phase3) + 1) * 72.5)
		)
		
	elseif colorType == "random_rgb_new_5" then
		local phase1, phase2, phase3 = t * 3.7, t * 5.4, t * 4.8
		return Color3.fromRGB(
			math.floor(95 + (math.sin(phase1) + 1) * 80),
			math.floor(95 + (math.sin(phase2) + 1) * 80),
			math.floor(95 + (math.sin(phase3) + 1) * 80)
		)
		
	elseif colorType == "random_rgb_new_6" then
		local phase1, phase2, phase3 = t * 4.9, t * 3.4, t * 5.7
		return Color3.fromRGB(
			math.floor(105 + (math.sin(phase1) + 1) * 75),
			math.floor(105 + (math.sin(phase2) + 1) * 75),
			math.floor(105 + (math.sin(phase3) + 1) * 75)
		)
		
	elseif colorType == "random_rgb_1" then
		local phase1, phase2, phase3 = t * 3.8, t * 4.1, t * 3.5
		return Color3.fromRGB(
			math.floor(100 + (math.sin(phase1) + 1) * 77.5),
			math.floor(100 + (math.sin(phase2) + 1) * 77.5),
			math.floor(100 + (math.sin(phase3) + 1) * 77.5)
		)
		
	elseif colorType == "random_rgb_2" then
		local phase1, phase2, phase3 = t * 5.2, t * 4.8, t * 5.5
		return Color3.fromRGB(
			math.floor(80 + (math.sin(phase1) + 1) * 87.5),
			math.floor(80 + (math.sin(phase2) + 1) * 87.5),
			math.floor(80 + (math.sin(phase3) + 1) * 87.5)
		)
		
	elseif colorType == "owner_rainbow" then
		local phase = t * 1.5 
		local hue = (phase % 6) / 6 
		return Color3.fromHSV(hue, 0.9, 1) 
		
	else
		local hue = (t * 0.8) % 1
		return Color3.fromHSV(hue, 0.8, 1)
	end
end

-- Get rank title and color based on summit count
local function getRank(summit)
	if summit < 0 then
		return "‚ùì Summit Tidak Dikenal", Color3.fromRGB(128, 128, 128)
	elseif summit >= 10000 then
		return "üåü GOD", Color3.fromRGB(255, 215, 0)
	elseif summit >= 8000 then
		return "‚ö° Dewa", Color3.fromRGB(138, 43, 226)
	elseif summit >= 6500 then
		return "üî• Si Paling Pro", Color3.fromRGB(255, 69, 0)
	elseif summit >= 5000 then
		return "‚ùÑÔ∏è Too EZ for me", Color3.fromRGB(0, 191, 255)
	elseif summit >= 4000 then
		return "üå™Ô∏è Juara", Color3.fromRGB(70, 130, 180)
	elseif summit >= 3500 then
		return "üíé Pendaki Elite", Color3.fromRGB(185, 242, 255)
	elseif summit >= 3000 then
		return "üèÜ Jago Mampus", Color3.fromRGB(255, 215, 0)
	elseif summit >= 2500 then
		return "‚öîÔ∏è Legendaris", Color3.fromRGB(255, 140, 0)
	elseif summit >= 2000 then
		return "üó°Ô∏è Udah Gila", Color3.fromRGB(148, 0, 211)
	elseif summit >= 1800 then
		return "üåÄ Mendaki Tanpa Henti", Color3.fromRGB(75, 0, 130)
	elseif summit >= 1600 then
		return "üîÆ Master Summit", Color3.fromRGB(147, 112, 219)
	elseif summit >= 1400 then
		return "‚≠ê Pendaki Langit", Color3.fromRGB(255, 255, 0)
	elseif summit >= 1200 then
		return "üöÄ Tak Terhentikan", Color3.fromRGB(0, 255, 255)
	elseif summit >= 1000 then
		return "üëë Master", Color3.fromRGB(255, 215, 0)
	elseif summit >= 100 then
		return "üèîÔ∏è Jago Banget", Color3.fromRGB(34, 139, 34)
	elseif summit >= 50 then
		return "üí™ Tryhard", Color3.fromRGB(255, 165, 0)
	elseif summit >= 25 then
		return "üî• Lumayan Jago", Color3.fromRGB(255, 69, 0)
	elseif summit >= 10 then
		return "üóø Pendaki Pemula", Color3.fromRGB(210, 180, 140)
	else
		return "ü§° Cupuh Banget", Color3.fromRGB(255, 255, 255)
	end
end

-- Create a text label helper
local function createLabel(parent, props)
	local label = Instance.new("TextLabel")
	label.BackgroundTransparency = 1
	label.TextStrokeColor3 = Color3.new(0, 0, 0)
	label.TextStrokeTransparency = props.TextStrokeTransparency or 0.3
	label.Font = props.Font or Enum.Font.GothamBold
	label.TextScaled = false
	label.TextSize = props.TextSize or 20
	label.RichText = false
	label.Size = props.Size or UDim2.new(1, 0, 1, 0)
	label.Position = props.Position or UDim2.new(0, 0, 0, 0)
	label.TextXAlignment = props.TextXAlignment or Enum.TextXAlignment.Center
	label.TextColor3 = props.TextColor3 or Color3.new(1, 1, 1)
	label.Text = props.Text or ""
	label.LayoutOrder = props.LayoutOrder or 0
	label.AutomaticSize = props.AutomaticSize or Enum.AutomaticSize.None
	label.Parent = parent
	return label
end

-- ========================================
-- DISPLAY CREATION
-- ========================================

local function createMinimalistDisplay(player, head, summit)
	-- Remove old GUI and disable default name tag
	for _, gui in ipairs(head:GetChildren()) do
		if gui:IsA("BillboardGui") then
			gui:Destroy()
		end
	end

	if head.Parent and head.Parent:IsA("Model") then
		local humanoid = head.Parent:FindFirstChild("Humanoid")
		if humanoid then
			humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
		end
	end

	-- Get player info
	local role = getPlayerRole(player.Name)
	local customTitle = CUSTOM_TITLES[player.Name]
	local colorType = CUSTOM_COLOR_TYPES[player.Name]
	local isVerified = VerifiedUsersList[player.Name]
	local isPremium = player.MembershipType == Enum.MembershipType.Premium

	-- Create main GUI
	local mainGui = Instance.new("BillboardGui")
	mainGui.Name = "MainDisplay"
	mainGui.Adornee = head
	mainGui.Size = UDim2.new(0, 280, 0, 75)
	mainGui.StudsOffset = Vector3.new(0, 3.5, 0)
	mainGui.AlwaysOnTop = true
	mainGui.MaxDistance = 50  -- Optimal distance for title visibility
	mainGui.Parent = head

	-- Container Frame
	local container = Instance.new("Frame")
	container.Size = UDim2.new(1, 0, 1, 0)
	container.BackgroundTransparency = 1
	container.Parent = mainGui

	-- ========================================
	-- LINE 1: Role + Custom Title
	-- ========================================
	if role then
		local roleContainer = Instance.new("Frame")
		roleContainer.Name = "RoleContainer"
		roleContainer.Size = UDim2.new(1, 0, 0.33, 0)
		roleContainer.Position = UDim2.new(0, 0, 0, 0)
		roleContainer.BackgroundTransparency = 1
		roleContainer.Parent = container

		if customTitle and colorType then
			-- Create layout for centered role + title
			local listLayout = Instance.new("UIListLayout")
			listLayout.FillDirection = Enum.FillDirection.Horizontal
			listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			listLayout.VerticalAlignment = Enum.VerticalAlignment.Center
			listLayout.SortOrder = Enum.SortOrder.LayoutOrder
			listLayout.Padding = UDim.new(0, 5)
			listLayout.Parent = roleContainer

			-- Role label
			local roleLabel = createLabel(roleContainer, {
				Size = UDim2.new(0, 0, 1, 0),
				AutomaticSize = Enum.AutomaticSize.X,
				LayoutOrder = 1,
				TextColor3 = ROLE_BRACKET_COLORS[role],
				Text = "[" .. role .. (ROLE_EMOJI[role] or "") .. "]"
			})

			-- Custom title label
			local titleLabel = createLabel(roleContainer, {
				Size = UDim2.new(0, 0, 1, 0),
				AutomaticSize = Enum.AutomaticSize.X,
				LayoutOrder = 2,
				Text = customTitle
			})

			-- Animate custom title color
			spawn(function()
				while titleLabel and titleLabel.Parent do
					local currentTime = tick()
					local animatedColor = getAnimatedColor(colorType, currentTime)
					titleLabel.TextColor3 = animatedColor
					wait(0.1)
				end
			end)

		elseif colorType == "owner_rainbow" then
			-- Owner rainbow animation
			local roleLabel = createLabel(roleContainer, {
				Text = "[" .. role .. "üëë]"
			})

			spawn(function()
				while roleLabel and roleLabel.Parent do
					local currentTime = tick()
					local rainbowColor = getAnimatedColor("owner_rainbow", currentTime)
					roleLabel.TextColor3 = rainbowColor
					wait(0.1)
				end
			end)

		else
			-- Static role display
			createLabel(roleContainer, {
				TextColor3 = ROLE_BRACKET_COLORS[role] or Color3.new(1, 1, 1),
				Text = "[" .. role .. (ROLE_EMOJI[role] or "") .. "]"
			})
		end
	end

	-- ========================================
	-- LINE 2: Premium Icon + DisplayName + Checkmark
	-- ========================================
	local line2Frame = Instance.new("Frame")
	line2Frame.Name = "NameLineFrame"
	line2Frame.Size = UDim2.new(1, 0, 0.33, 0)
	line2Frame.Position = UDim2.new(0, 0, role and 0.33 or 0.2, 0)
	line2Frame.BackgroundTransparency = 1
	line2Frame.Parent = container

	-- Create horizontal layout
	local nameLayout = Instance.new("UIListLayout")
	nameLayout.FillDirection = Enum.FillDirection.Horizontal
	nameLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	nameLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	nameLayout.SortOrder = Enum.SortOrder.LayoutOrder
	nameLayout.Padding = UDim.new(0, 3)
	nameLayout.Parent = line2Frame

	-- Premium Icon
	if isPremium then
		createLabel(line2Frame, {
			Size = UDim2.new(0, 0, 1, 0),
			AutomaticSize = Enum.AutomaticSize.X,
			LayoutOrder = 1,
			TextColor3 = Color3.fromRGB(255, 215, 0),
			Font = Enum.Font.SourceSansBold,
			TextSize = 18,
			TextStrokeTransparency = 0.5,
			Text = utf8.char(0xE001)
		})
	end

	-- Display Name
	createLabel(line2Frame, {
		Size = UDim2.new(0, 0, 1, 0),
		AutomaticSize = Enum.AutomaticSize.X,
		LayoutOrder = 2,
		TextColor3 = Color3.new(1, 1, 1),
		Font = Enum.Font.SourceSansBold,
		TextSize = 18,
		TextStrokeTransparency = 0.5,
		Text = player.DisplayName
	})

	-- Verified Checkmark
	if isVerified then
		local checkmarkLabel = createLabel(line2Frame, {
			Size = UDim2.new(0, 0, 1, 0),
			AutomaticSize = Enum.AutomaticSize.X,
			LayoutOrder = 3,
			Font = Enum.Font.SourceSansBold,
			TextSize = 18,
			TextStrokeTransparency = 0.5,
			Text = utf8.char(0xE000)
		})

		-- Animate checkmark color
		spawn(function()
			while checkmarkLabel and checkmarkLabel.Parent do
				local time = (tick() % 4) / 4
				local rainbowColor = Color3.fromHSV(time, 1, 1)
				checkmarkLabel.TextColor3 = rainbowColor
				wait(0.15)
			end
		end)
	end

	-- ========================================
	-- LINE 3: Title + Summit Count
	-- ========================================
	local line3 = createLabel(container, {
		Size = UDim2.new(1, 0, 0.34, 0),
		Position = UDim2.new(0, 0, role and 0.66 or 0.53, 0),
		Font = Enum.Font.SourceSansBold,
		TextSize = 16,
		TextStrokeTransparency = 0
	})

	local function updateInfoLine(summitValue)
		local summitNum = tonumber(summitValue) or 0
		local title, titleColor = getRank(summitNum)
		line3.TextColor3 = titleColor
		line3.Text = title .. " (" .. tostring(summitNum) .. ")"
	end

	updateInfoLine(summit.Value)
	summit.Changed:Connect(updateInfoLine)
end

-- ========================================
-- PLAYER SETUP
-- ========================================

local function setupPlayerDisplay(player)
	local function onCharacterAdded(character)
		local head = character:WaitForChild("Head", 5)
		if not head then return end

		local leaderstats = player:WaitForChild("leaderstats", 10)
		if not leaderstats then return end

		local summit = leaderstats:WaitForChild("Summit", 5)
		if not summit then return end

		createMinimalistDisplay(player, head, summit)
	end

	if player.Character then
		onCharacterAdded(player.Character)
	end

	player.CharacterAdded:Connect(onCharacterAdded)
end

-- Setup for all existing players
for _, player in ipairs(Players:GetPlayers()) do
	setupPlayerDisplay(player)
end

-- Setup for new players
Players.PlayerAdded:Connect(setupPlayerDisplay)

print("PlayerDisplayClient initialized successfully!")
print("Custom by ItoRenz00")
print("Version 2.2 - Enhanced Multi-User Support")
